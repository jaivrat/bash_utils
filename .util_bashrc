# Common utilities for bash

# remote_execute jvsingh@hetzner "ls -lrt"
remote_execute() {
    local host="$1"
    shift
    ssh "$host" "$@"
}

# To tar and gzip a folder
targz() {
  if [ -z "$1" ]; then
    echo "Usage: targz folder_path"
    return 1
  fi
  folder="$1"
  base=$(basename "$folder")
  dir=$(dirname "$folder")
  tar -czf "${base}.tar.gz" -C "$dir" "$base"
}

tmux_rename() {
    if [ $# -ne 2 ]; then
        echo "Usage: tmux_rename <old_name> <new_name>"
        echo "Example: tmux_rename old_session new_session"
        return 1
    fi
    
    local old_name="$1"
    local new_name="$2"
    
    if tmux has-session -t "$old_name" 2>/dev/null; then
        if tmux has-session -t "$new_name" 2>/dev/null; then
            echo "Error: Session '$new_name' already exists"
            return 1
        else
            echo "Renaming tmux session from '$old_name' to '$new_name'"
            tmux rename-session -t "$old_name" "$new_name"
        fi
    else
        echo "Error: Session '$old_name' not found"
        return 1
    fi
}

tmux2w() {
    # To create a tmux session with two windows
    # One for main process and other for its log
    local SESSION="$1"

    if [ -z "$SESSION" ]; then
        echo "Usage: tmux2w <session-name>"
        return 1
    fi

    # Check if session exists
    if tmux has-session -t "$SESSION" 2>/dev/null; then
        echo "Error: Session '$SESSION' already exists."
        return 1
    fi

    # Create the session with first pane running strat
    tmux new-session -d -s "$SESSION" -n main
    tmux send-keys -t "$SESSION:0.0" "strat" C-m

    # Split horizontally (-h) for side-by-side; use -v for top/bottom
    tmux split-window -h -t "$SESSION:0"
    tmux send-keys -t "$SESSION:0.1" "cd ~/temp/logs" C-m

    # Attach to the new session
    tmux attach -t "$SESSION"
}


update_terminal_tab_title() {
  local host env_name
  host=$(hostname -s)              # short hostname
  env_name=${MY_ENVIRONMENT:-}     # optional env var

  if [ -n "$TMUX" ]; then
    local session_name
    session_name=$(tmux display-message -p '#S' 2>/dev/null)
    if [ -n "$session_name" ]; then
      # Compose: tmux:session@hostname[env]
      local title="tmux:${session_name}@${host}"
      [ -n "$env_name" ] && title="${title}[${env_name}]"
      echo -ne "\033]0;${title}\007"
    fi
  else
    # Optional: set a default title when not in tmux
    echo -ne "\033]0;remote-shell@${host}\007"
  fi
}

PROMPT_COMMAND="update_terminal_tab_title${PROMPT_COMMAND:+;$PROMPT_COMMAND}"

# I want always to start a tmux session whenever I am opening a terminal
# To “pre-warm” a tmux session in the background without actually attaching to it.
# checks if main already exists. If it doesn’t, tmux new-session -d -s main creates
# it detached (-d), so it runs in the background and you stay in your plain shell.
# You can later attach to it manually with: tmux attach -t main
# ~/.bashrc or ~/.bash_profile

# If not inside tmux, ensure a 'main' session exists (detached)
if [ -z "$TMUX" ]; then
    tmux has-session -t main 2>/dev/null || tmux new-session -d -s main
fi

# If tmux.conf exists, source it (requires tmux server to be running)
if [ -f "$HOME/.tmux.conf" ]; then
    tmux source-file "$HOME/.tmux.conf"
fi


# Common aliases for tmux sessions
alias tmux_kill='tmux kill-session -t'
alias tmux_attach='tmux attach -t'
alias ta='tmux_attach'
alias tmux_new='tmux new-session -s'
alias tmux_list='tmux list-sessions'
alias tmux_ls='tmux_list'
alias tmux-list='tmux_list'
alias tmux-ls='tmux_list'
alias tls='tmux_list'
alias tmux-kill='tmux_kill'
alias tmux-attach='tmux_attach'
alias tmux-new='tmux_new'
alias tmux-rename='tmux_rename'


tmux_commands() {

 echo ''
 echo '=====CREATION     ======='
 echo 'tmux ls                                     # Show all sessions OR ALIAS tmux_ls tmux_list'
 echo 'tmux attach -t mysession                    # Attach to session OR ALIAS tmux_attach'
 echo 'tmux new -s mysession                       # New session       OR ALIAS tmux_new'
 echo 'tmux kill-ses -t mysession                  # KILL session      OR ALIAS tmux_kill'
 echo 'tmux rename-session -t old_name new_name    # RENAME session    OR FUNC  tmux_rename'
 echo 'tmux2w mysession                            # FUNCTION to CREATE split window as new SESSION'

 echo ''

 echo ''
 echo '=====SPLIT WINDOWS======='
 echo ':split-window -v'
 echo ':ctrl+b %'
 echo ':split-window -h'
 echo ':ctrl+b "'
 echo ':ctrl+b SPACEBAR     # Toggle between pane layouts'

}

# Other alias 
alias rex="remote_execute "
# US machine
alias rex_us="remote_execute jvsingh@hetzner_us "
# German machine
alias rex_ge="remote_execute jvsingh@hetzner "

# example : rex jvsingh@hetzner_us "cd temp; ls -lrt"
alias readpq="$HOME/work/github/bash_utils/bin/readpq "
alias rpq="$HOME/work/github/bash_utils/bin/readpq "

# htop to consume less cpu
alias htop='htop -d 20'
# To see colours in logs always use -R
alias less='less -R'

# List more than 5 days old 
alias old5 ='find . -maxdepth 1 -type d -mtime +5'

