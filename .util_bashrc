# Common utilities for bash

# To tar and gzip a folder
targz() {
  if [ -z "$1" ]; then
    echo "Usage: targz folder_path"
    return 1
  fi
  folder="$1"
  base=$(basename "$folder")
  dir=$(dirname "$folder")
  tar -czf "${base}.tar.gz" -C "$dir" "$base"
}


tmux_commands() {

 echo ''
 echo '=====CREATION     ======='
 echo 'tmux ls                  # Show all sessions'
 echo 'tmux attach -t mysession   # Attach to my session'
 echo 'tmux new -s mysession    #For new session'
 echo 'tmux kill-ses -t mysession # KILL session'
 echo 'tmux rename-session -t old_name new_name    # RENAME session'


 echo ''


 echo ''
 echo '=====SPLIT WINDOWS======='
 echo ':split-window -v'
 echo ':ctrl+b %'
 echo ':split-window -h'
 echo ':ctrl+b "'
 echo ':ctrl+b SPACEBAR     # Toggle between pane layouts'

}

tmux2w() {
    # To create a tmux session with two windows
    # One for main process and other for its log
    local SESSION="$1"

    if [ -z "$SESSION" ]; then
        echo "Usage: tmux2w <session-name>"
        return 1
    fi

    # Check if session exists
    if tmux has-session -t "$SESSION" 2>/dev/null; then
        echo "Error: Session '$SESSION' already exists."
        return 1
    fi

    # Create the session with first pane running strat
    tmux new-session -d -s "$SESSION" -n main
    tmux send-keys -t "$SESSION:0.0" "strat" C-m

    # Split horizontally (-h) for side-by-side; use -v for top/bottom
    tmux split-window -h -t "$SESSION:0"
    tmux send-keys -t "$SESSION:0.1" "cd ~/temp/logs" C-m

    # Attach to the new session
    tmux attach -t "$SESSION"
}


update_terminal_tab_title() {
  if [ -n "$TMUX" ]; then
    local session_name
    session_name=$(tmux display-message -p '#S' 2>/dev/null)
    if [ -n "$session_name" ]; then
      echo -ne "\033]0;tmux:$session_name\007"
    fi
  else
    # Optional: set a default title when not in tmux
    echo -ne "\033]0;remote-shell\007"
  fi
}

PROMPT_COMMAND="update_terminal_tab_title${PROMPT_COMMAND:+;$PROMPT_COMMAND}"

# I want always to start a tmux session whenever I am opening a terminal
# To “pre-warm” a tmux session in the background without actually attaching to it.
# checks if main already exists. If it doesn’t, tmux new-session -d -s main creates
# it detached (-d), so it runs in the background and you stay in your plain shell.
# You can later attach to it manually with: tmux attach -t main
# ~/.bashrc or ~/.bash_profile

# If not inside tmux, ensure a 'main' session exists (detached)
if [ -z "$TMUX" ]; then
    tmux has-session -t main 2>/dev/null || tmux new-session -d -s main
fi

# If tmux.conf exists, source it (requires tmux server to be running)
if [ -f "$HOME/.tmux.conf" ]; then
    tmux source-file "$HOME/.tmux.conf"
fi
